load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "cadvisor_utils.go",
        "configs.go",
        "kubelet.go",
        "kubelet_client.go",
    ],
    importpath = "k8s.io/heapster/metrics/sources/kubelet",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/golang/glog:go_default_library",
        "//vendor/github.com/google/cadvisor/info/v1:go_default_library",
        "//vendor/github.com/prometheus/client_golang/prometheus:go_default_library",
        "//vendor/k8s.io/heapster/common/kubernetes:go_default_library",
        "//vendor/k8s.io/heapster/metrics/core:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/api:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/client/cache:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/client/restclient:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/client/unversioned:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/fields:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/kubelet/api/v1alpha1/stats:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/kubelet/client:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/labels:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "kubelet_client_test.go",
        "kubelet_test.go",
    ],
    importpath = "k8s.io/heapster/metrics/sources/kubelet",
    library = ":go_default_library",
    deps = [
        "//vendor/github.com/google/cadvisor/info/v1:go_default_library",
        "//vendor/github.com/stretchr/testify/assert:go_default_library",
        "//vendor/github.com/stretchr/testify/require:go_default_library",
        "//vendor/k8s.io/heapster/metrics/core:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/api:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/util/testing:go_default_library",
    ],
)
