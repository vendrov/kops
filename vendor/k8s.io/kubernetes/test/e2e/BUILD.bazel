load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "dashboard.go",
        "e2e.go",
        "events.go",
        "example_cluster_dns.go",
        "examples.go",
        "gke_local_ssd.go",
        "gke_node_pools.go",
        "limit_range.go",
        "network_partition.go",
        "pod_gc.go",
        "pods.go",
        "pre_stop.go",
        "resource_quota.go",
        "ssh.go",
        "ubernetes_lite.go",
    ],
    importpath = "k8s.io/kubernetes/test/e2e",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/golang/glog:go_default_library",
        "//vendor/github.com/onsi/ginkgo:go_default_library",
        "//vendor/github.com/onsi/ginkgo/config:go_default_library",
        "//vendor/github.com/onsi/ginkgo/reporters:go_default_library",
        "//vendor/github.com/onsi/gomega:go_default_library",
        "//vendor/k8s.io/api/core/v1:go_default_library",
        "//vendor/k8s.io/api/rbac/v1beta1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/api/errors:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/api/resource:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/fields:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/labels:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/runtime:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/runtime/schema:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/intstr:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/runtime:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/sets:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/uuid:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/wait:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/watch:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/authentication/serviceaccount:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes:go_default_library",
        "//vendor/k8s.io/client-go/tools/cache:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/api:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/api/testapi:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/api/v1/pod:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/cloudprovider/providers/azure:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/cloudprovider/providers/gce:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/controller/node:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/kubectl/util/logs:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/kubelet/apis:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/quota/evaluator/core:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/common:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/framework:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/framework/ginkgowrapper:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/framework/metrics:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/generated:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/manifest:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e_federation:go_default_library",
        "//vendor/k8s.io/kubernetes/test/utils:go_default_library",
        "//vendor/k8s.io/kubernetes/test/utils/image:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = ["e2e_test.go"],
    importpath = "k8s.io/kubernetes/test/e2e",
    library = ":go_default_library",
    deps = [
        "//vendor/k8s.io/kubernetes/test/e2e/apimachinery:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/apps:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/auth:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/autoscaling:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/common:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/framework:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/instrumentation:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/kubectl:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/lifecycle:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/lifecycle/bootstrap:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/network:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/node:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/scalability:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/scheduling:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/servicecatalog:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/storage:go_default_library",
    ],
)
